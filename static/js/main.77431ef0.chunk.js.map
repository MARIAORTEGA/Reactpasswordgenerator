{"version":3,"sources":["components/Title/index.js","components/Password/index.js","App.js","index.js"],"names":["styles","jumbotronStyle","background","color","Title","props","className","align","style","onClick","getCriteria","Password","console","log","value","password","App","passlength","Number","window","prompt","upper","confirm","lower","number","special","choices","state","uppercase","lowercase","numbers","characters","i","randomcharacterpos","Math","floor","random","length","charAt","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4LAEMA,EAAS,CACbC,eAAgB,CACdC,WAAY,UACZC,MAAO,UAmBIC,MAff,SAAeC,GACb,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAYC,MAAM,SAASC,MAAOR,EAAOC,eAAxD,UACE,oDACA,4BACE,wBAAQK,UAAU,sBAAsBG,QAASJ,EAAMK,YAAvD,uCCGKC,MAhBf,SAAkBN,GAEhB,OADAO,QAAQC,IAAIR,GAWV,aATA,CASA,YAAUS,MAAOT,EAAMU,YCuDZC,E,kDAzDb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAWRK,YAAc,WACZ,IAAIO,EAAaC,OAAOC,OAAOC,OAAO,iCAClCC,EAAQF,OAAOG,QAAQ,qCACvBC,EAAQJ,OAAOG,QAAQ,qCACvBE,EAASL,OAAOG,QAAQ,2BACxBG,EAAUN,OAAOG,QACnB,wDAEEI,EAAU,GACVL,IACFK,GAAW,EAAKC,MAAMC,WAGpBL,IACFG,GAAW,EAAKC,MAAME,WAGpBL,IACFE,GAAW,EAAKC,MAAMG,SAGpBL,IACFC,GAAW,EAAKC,MAAMI,YAExBnB,QAAQC,IAAIa,EAAST,GAErB,IADA,IAAIF,EAAW,GACNiB,EAAI,EAAGA,EAAIf,EAAYe,IAAK,CACnC,IAAIC,EAAqBC,KAAKC,MAAMD,KAAKE,SAAWV,EAAQW,QAC5DtB,GAAYW,EAAQY,OAAOL,GAE7BrB,QAAQC,IAAIE,GACZ,EAAKwB,SAAS,CAAExB,SAAUA,KAzC1B,EAAKY,MAAQ,CAEXC,UAAW,6BACXC,UAAW,6BACXC,QAAS,aACTC,WAAY,iBAEZhB,SAAU,IATK,E,0CA8CnB,WAGE,OACE,sBAAKT,UAAU,kBAAf,UACE,cAAC,EAAD,CAAOI,YAAa8B,KAAK9B,cAAgB,IACzC,cAAC,EAAD,CAAUK,SAAUyB,KAAKb,MAAMZ,kB,GArDrB0B,a,MCNlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.77431ef0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  jumbotronStyle: {\n    background: \"#85929E\",\n    color: \"white\",\n  },\n};\n\nfunction Title(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\" align=\"center\" style={styles.jumbotronStyle}>\n        <h1>Password Generator</h1>\n        <p>\n          <button className=\"btn btn-info btn-lg\" onClick={props.getCriteria}>\n            Generate Password\n          </button>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\n\nfunction Password(props) {\n  console.log(props);\n  return (\n    // <div className=\"card bg-light mb-3\">\n    //   <div className=\"card-body\">\n    //     <h5 className=\"card-title\" align=\"center\">\n    //       {Math.floor(Math.random() * 10) + 1},\n    //       {Math.floor(Math.random() * 10) + 1},\n    //       {Math.floor(Math.random() * 10) + 1}\n    //     </h5>\n    //   </div>\n    // </div>\n    <textarea value={props.password}></textarea>\n  );\n}\n\nexport default Password;\n\n//https://www.codegrepper.com/code-examples/javascript/how+to+generate+random+alphabet+in+javascript\n","import React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Password from \"./components/Password\";\n//import Options from \"./components/Options\";\n\n// function App() {\n//   return (\n\n//   );\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // initial state for pwd length and all char bools\n      uppercase: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n      lowercase: \"abcdefghijklmnopqrstuvwxyz\",\n      numbers: \"0123456789\",\n      characters: \"!@#$%^&*()_+=?\",\n\n      password: \"\",\n    };\n  }\n  getCriteria = () => {\n    var passlength = Number(window.prompt(\"How long should password be?\"));\n    var upper = window.confirm(\"Would you like uppercase letters?\");\n    var lower = window.confirm(\"Would you like lowercase letters?\");\n    var number = window.confirm(\"Would you like numbers?\");\n    var special = window.confirm(\n      \"Would you like special characters (such as ! @ # ?)?\"\n    );\n    var choices = \"\";\n    if (upper) {\n      choices += this.state.uppercase;\n    }\n\n    if (lower) {\n      choices += this.state.lowercase;\n    }\n\n    if (number) {\n      choices += this.state.numbers;\n    }\n\n    if (special) {\n      choices += this.state.characters;\n    }\n    console.log(choices, passlength);\n    var password = \"\";\n    for (var i = 0; i < passlength; i++) {\n      var randomcharacterpos = Math.floor(Math.random() * choices.length);\n      password += choices.charAt(randomcharacterpos);\n    }\n    console.log(password);\n    this.setState({ password: password });\n  };\n\n  render() {\n    // run all the above methods to calculate the password before rendering\n\n    return (\n      <div className=\"password button\">\n        <Title getCriteria={this.getCriteria} />{\" \"}\n        <Password password={this.state.password} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}